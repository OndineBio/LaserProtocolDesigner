{"version":3,"sources":["datatypes.ts","components/StepList.tsx","components/dialogs/shared/DialogStyledComponents.tsx","components/dialogs/shared/WellSelect.tsx","components/dialogs/StepEditDialog.tsx","components/BasePlateSelect.tsx","components/dialogs/StepNewDialog.tsx","components/DownloadButton.tsx","pythonConversion.ts","components/UploadButton.tsx","App.tsx","theme.tsx","index.tsx"],"names":["StepType","stepTypeHas","type","attr","TRANSFER","includes","LASER","DISPENSE","PLACEHOLDER","ASPIRATE","PLATE","MIX","WAIT","CHANGESPEED","LabwareType","PlaceHolderStep","id","Math","floor","random","Transfer","from","to","volume","touchtip","airgap","blowout","blowoutLocation","sterility","this","prev","nextList","slice","last","next","mixString","pythonString","times","JSON","stringify","toString","charAt","toUpperCase","comment","split","json","parse","fromJSONWelltoWell","Laser","location","duration","stepsBefore","heightOfLiquidInWellFromBottomOfWell","Aspirate","Dispense","Mix","Plate","heightOfAgar","Wait","ChangeSpeed","pipetteSpeeds","OpentronsTipRack","slot","name","instanceOfWellPlate","object","isWellPlate","jw","wellPlateType","WellPlate6","wells","find","v","locationString","WellPlate12","WellPlate24","WellPlate48","Reservoir12","TubeRack15Falcon15","TubeRack24Eppendorf15","WellPlate96","FalconPetriDish90mm","Error","Well","wellPlate","wellString","isJSONWell","steps","currentVolume","step","wellHeight","height","PI","wellDiameter","round","WellPlateN","numberOfWells","numOfLetterWells","numOfNumberWells","loadLabwareString","forEach","val","i","push","map","useStyles","makeStyles","theme","createStyles","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","noStepsDiv","padding","display","justifyContent","highlight","border","StepList","onCopy","onClickItem","onMoveUp","onMoveDown","onDelete","highlightItemId","classes","Paper","className","List","length","Typography","variant","ListItem","onClick","button","key","ListItemIcon","secondaryArray","ListItemText","primary","secondary","getListItemText","ListItemSecondaryAction","IconButton","edge","aria-label","FileCopy","ArrowUpward","ArrowDownward","Delete","DialogTitle","withStyles","closeButton","position","right","top","color","grey","props","children","onClose","other","disableTypography","DialogContent","rowGap","gridRow","MuiDialogContent","DialogActions","MuiDialogActions","WellPlateButtons","setWell","currentWell","obj","labwareGrid","gap","gridTemplateColumns","gridTemplateRows","row","col","gridColumn","e","console","error","num","borderRadius","buttonSelected","wellPlateButtonsGrid","gridItem","useWellPlateButtonsStyles","undefined","currentWellIndex","findIndex","w","getClassForButton","index","Button","disabled","size","useWellPlatesSelectStyles","formControl","minWidth","WellPlatesSelect","wellPlates","currentWellPlate","setWellPlate","indexOfCurrent","plate","currentValue","FormControl","InputLabel","Select","value","labelId","onChange","target","pIndex","MenuItem","useWellSelectStyles","errorMessage","WellSelect","hide","availableLabware","initialWell","well","React","useState","useEffect","filter","labware","tipRacks","StepEditDialog","initialStep","handleClose","handleSave","open","setFrom","setTo","setDuration","setLocation","setVolume","setTouchTip","setAirgap","setBlowout","setBlowoutLocation","setTimes","setHeightOfAgar","setSterility","setPipetteSpeeds","Dialog","aria-labelledby","dividers","TextField","persist","Number","label","FormControlLabel","control","Checkbox","Boolean","checked","Grid","container","item","xs","md","hidden","autoFocus","textAlign","text","whiteSpace","marginBottom","BasePlateSelect","currentSelected","onUpdateSelected","blank","Array","fill","slotToRealIndex","setSlotValues","reverse","slotValues","realIndexToSlot","realIndex","Container","Box","my","displayEmpty","event","indexOfValue","newValue","filtered","renderValue","ware","useSelectStepStyles","SelectStep","currentStepType","setCurrentStepType","options","StepNewDialog","s","required","DownloadButton","fileOptions","onDownload","file","author","description","labwareString","getPythonInit","join","replace","stepString","array","getPythonString","log","tipRacksString","hasLaser","some","buildPythonProtocolForExport","blob","Blob","FileSaver","saveAs","BasicFile","content","UploadButton","setSteps","setLabware","setMeta","parseFile","pythonFile","meta","trim","fromImportComment","importPythonProtocol","onUpload","a","inputElement","filesRaw","files","readAFile","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsText","filesPromises","all","Fragment","accept","style","htmlFor","component","center","metaContainer","marginTop","fab","swapArrayElements","x","y","splice","App","selectedStep","setSelectedStep","highlightedItemId","setHighlightedItemId","addItem","withColor","setTimeout","newDialogIsOpen","setNewDialogIsOpen","setName","setDescription","setAuthor","labwareTypes","selectedLabware","setSelectedLabware","AppBar","Toolbar","multiline","rowsMax","selected","labwareArray","copyStep","Fab","saveItem","createMuiTheme","main","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","Helmet","document","querySelector"],"mappings":"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","file":"static/js/main.72d296d8.chunk.js","sourcesContent":["import {Step} from \"@material-ui/core\";\n\nexport enum StepType {\n  TRANSFER = \"TRANSFER\", LASER = \"LASER\", ASPIRATE = \"ASPIRATE\", DISPENSE = \"DISPENSE\",\n  PLACEHOLDER = \"PLACEHOLDER\",\n  MIX = \"MIX\", WAIT = \"WAIT\",\n  PLATE = \"PLATE\",\n  CHANGESPEED = \"CHANGESPEED\",\n}\n\nexport function stepTypeHas(type: StepType, attr: string): boolean {\n  switch (type) {\n    case StepType.TRANSFER:\n      return [\"from\", \"to\", \"volume\", \"touchtip\", \"airgap\", \"blowout\", \"blowoutLocation\", \"sterility\"].includes(attr)\n    case StepType.LASER:\n      return [\"location\", \"duration\"].includes(attr)\n    case StepType.DISPENSE:\n      return [\"to\", \"volume\", \"touchtip\", \"blowout\"].includes(attr)\n    case StepType.PLACEHOLDER:\n      return false\n    case StepType.ASPIRATE:\n      return [\"from\", \"volume\", \"touchtip\"].includes(attr)\n    case StepType.PLATE:\n      return [\"from\", \"to\", \"heightOfAgar\", \"volume\", \"touchtip\", \"airgap\", \"blowout\", \"blowoutLocation\"].includes(attr)\n    case StepType.MIX:\n      return [\"from\", \"volume\", \"times\"].includes(attr)\n    case StepType.WAIT:\n      return [\"duration\"].includes(attr)\n    case StepType.CHANGESPEED:\n      return [\"pipetteSpeeds\"].includes(attr)\n  }\n  return false\n}\n\n/*import comment structure\n\n# CLASSNAME;{ParamName:param,ParamName:param}\n\n*/\n\n\nexport function copyStep(s: Step) {\n  switch (s.type) {\n    case StepType.TRANSFER:\n      return new Transfer({...s as { from: Well, to: Well, volume: number, touchtip: boolean, airgap: number, blowout: boolean, blowoutLocation: string, sterility: string }})\n    case StepType.LASER:\n      return new Laser({...s as { location: Well, duration: number }})\n    case StepType.ASPIRATE:\n      return new Aspirate({...s as { from: Well, volume: number, touchtip: boolean }})\n    case StepType.DISPENSE:\n      return new Dispense({...s as { to: Well, volume: number, touchtip: boolean, blowout: boolean, blowoutLocation: string}})\n    case StepType.PLACEHOLDER:\n      return new PlaceHolderStep()\n    case StepType.MIX:\n      return new Mix({...s as { from: Well, volume: number, touchtip: boolean, times: number }})\n    case StepType.PLATE:\n      return new Plate({...s as { from: Well, to: Well, volume: number, touchtip: boolean, airgap: number, heightOfAgar: number, blowout: boolean, blowoutLocation: string}})\n    case StepType.WAIT:\n      return new Wait({...s as { duration: number }})\n    case StepType.CHANGESPEED:\n      return new ChangeSpeed({...s as {pipetteSpeeds: number[]}})\n  }\n}\n\nexport interface Step {\n  id: string\n  type: StepType\n  getPythonString: (stepsBefore: Step[], stepsNext: Step[]) => string\n  from?: Well\n  to?: Well\n  duration?: number\n  location?: Well\n  heightOfAgar?: number\n  volume?: number\n  touchtip?: boolean\n  airgap?: number\n  blowout?: boolean\n  blowoutLocation?: string\n  sterility?: string\n  times?: number\n  pipetteSpeeds?: number[]\n}\n\nexport class PlaceHolderStep implements Step {\n  [key: string]: any;\n\n  getPythonString(): string {\n    return \"\";\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n  type: StepType = StepType.PLACEHOLDER;\n}\n\nexport class Transfer implements Step {\n\n\n  [k: string]: any;\n\n  from: Well\n  to: Well\n  volume: number\n  touchtip: boolean\n  airgap: number\n  blowout: boolean\n  blowoutLocation: string\n  sterility: string\n\n  type = StepType.TRANSFER;\n\n  constructor({from, to, volume, touchtip, airgap, blowout, blowoutLocation, sterility}: { from: Well, to: Well, volume: number, touchtip: boolean, airgap: number, blowout: boolean, blowoutLocation: string, sterility: string }) {\n\n    this.from = from;\n    this.to = to;\n    this.volume = volume;\n    this.touchtip = touchtip;\n    this.airgap = airgap;\n    this.blowout = blowout;\n    this.blowoutLocation = blowoutLocation;\n    this.sterility = sterility;\n  }\n\n  getPythonString(prev: Step[], nextList: Step[]): string {\n    const [last] = prev.slice(-1)\n    const next = nextList?.[0]\n\n    let mixString = \"\"\n\n    if (last?.type === StepType.MIX && last?.from?.pythonString() === this.from.pythonString()) {\n      mixString += `mix_before=(${last.times}, ${last.volume}), `\n    }\n    if (next?.type === StepType.MIX && next?.from?.pythonString() === this.to.pythonString()) {\n      mixString += `mix_after=(${next.times}, ${next.volume}), `\n    }\n\n    return `\n\n# ${this.type};${JSON.stringify(this)}\n\npipette.transfer(${this.volume}, ${this.from.pythonString()}, ${this.to.pythonString()}, ${mixString}touch_tip=${this.touchtip.toString().charAt(0).toUpperCase() + this.touchtip.toString().slice(1)}, new_tip='${this.sterility}',${this.airgap === 0 ? '' : 'air_gap=' + this.airgap + ','} blow_out=${this.blowout.toString().charAt(0).toUpperCase() + this.blowout.toString().slice(1)}, blowout_location='${this.blowoutLocation}')`;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n\n    const [, json] = comment.split(\";\")\n    const {from, to, volume, touchtip, airgap, blowout, blowoutLocation, sterility} = JSON.parse(json) as { from: JSONWell, to: JSONWell, volume: number, touchtip: boolean, airgap: number, blowout: boolean, blowoutLocation: string, sterility: string }\n    return new Transfer({from: fromJSONWelltoWell(from), to: fromJSONWelltoWell(to), volume, touchtip, airgap, blowout, blowoutLocation, sterility})\n  }\n\n}\n\nexport class Laser implements Step {\n  [k: string]: any;\n\n  location: Well;\n  type = StepType.LASER;\n\n  constructor({location, duration}: { location: Well, duration: number }) {\n\n    this.duration = duration;\n    this.location = location;\n  }\n\n  getPythonString(stepsBefore: Step[]): string {\n    this.location.heightOfLiquidInWellFromBottomOfWell(stepsBefore)\n    return `\n# ${this.type};${JSON.stringify(this)}\nlaserController.move_to_well(well=${this.location.pythonString()}, height_of_liquid=${this.location.heightOfLiquidInWellFromBottomOfWell(stepsBefore)})\nlaserController.turn_on_laser(seconds_to_off=${this.duration})\n    `;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {location, duration} = JSON.parse(json) as { location: JSONWell, duration: number }\n\n    return new Laser({location: fromJSONWelltoWell(location), duration})\n  }\n}\n\nexport class Aspirate implements Step {\n  [k: string]: any;\n\n  type = StepType.ASPIRATE;\n\n\n  constructor({from, volume, touchtip}: { from: Well, volume: number, touchtip: boolean }) {\n    this.from = from;\n    this.volume = volume;\n    this.touchtip = touchtip;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  getPythonString(prev: Step[]): string {\n    const [last] = prev.slice(-1)\n    return `\n# ${this.type};${JSON.stringify(this)}\n${last?.type !== StepType.MIX ? \"pipette.pick_up_tip()\" : \"\"}\npipette.aspirate(${this.volume}, ${this.from.pythonString()})\n${this.touchtip ? 'pipette.touch_tip()'  : ''}\n`;\n  }\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {from, volume, touchtip} = JSON.parse(json) as { from: JSONWell, volume: number, touchtip: boolean }\n    return new Aspirate({from: fromJSONWelltoWell(from), volume, touchtip})\n  }\n\n}\n\nexport class Dispense implements Step {\n  [k: string]: any;\n\n  type = StepType.DISPENSE;\n\n  constructor({to, volume, touchtip, blowout}: { to: Well, volume: number, touchtip: boolean, blowout: boolean }) {\n    this.to = to;\n    this.volume = volume;\n    this.touchtip = touchtip;\n    this.blowout = blowout;\n  }\n\n  getPythonString(): string {\n    return `\n# ${this.type}; ${JSON.stringify(this)}\npipette.dispense(${this.volume}, ${this.to.pythonString()})\n${this.touchtip ? 'pipette.touch_tip()'  : ''}\n${this.blowout ? 'pipette.blow_out()' : ''}\npipette.drop_tip()`;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {to, volume, touchtip, blowout} = JSON.parse(json) as { to: JSONWell, volume: number, touchtip: boolean, blowout: boolean }\n    return new Dispense({to: fromJSONWelltoWell(to), volume, touchtip, blowout})\n  }\n\n\n}\n\nexport class Mix implements Step {\n  [k: string]: any;\n\n  type = StepType.MIX;\n  from: Well;\n\n  constructor({from, volume, times}: { from: Well, volume: number, times: number }) {\n    this.from = from;\n    this.times = times;\n    this.volume = volume;\n  }\n\n  getPythonString(prev: Step[], next: Step[]): string {\n    if (\n      (\n        (next?.[0]?.type === StepType.TRANSFER || next?.[0]?.type === StepType.PLATE)\n        &&\n        next?.[0]?.from?.pythonString() === this.from.pythonString()\n      )\n      ||\n      (\n        (prev?.[0]?.type === StepType.TRANSFER || prev?.[0]?.type === StepType.PLATE)\n        &&\n        prev?.[0]?.to?.pythonString() === this.from.pythonString()\n      )\n    ) return `# ${this.type}; ${JSON.stringify(this)}`\n    return `\n# ${this.type}; ${JSON.stringify(this)}\npipette.pick_up_tip()\npipette.mix(${this.times}, ${this.volume}, ${this.from.pythonString()})`;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {from, volume, times} = JSON.parse(json) as { from: JSONWell, volume: number, times: number }\n    return new Mix({from: fromJSONWelltoWell(from), volume, times})\n  }\n\n\n}\n\nexport class Plate implements Step {\n  [k: string]: any;\n\n  heightOfAgar: number\n  volume: number\n  from: Well\n  to: Well\n  touchtip: boolean\n  airgap: number\n  blowout: boolean\n  blowoutLocation: string\n  type = StepType.PLATE;\n\n  constructor({from, to, volume, touchtip, airgap, heightOfAgar, blowout, blowoutLocation}: { from: Well, to: Well, volume: number, touchtip: boolean, airgap: number, heightOfAgar: number, blowout: boolean, blowoutLocation: string}) {\n    this.heightOfAgar = heightOfAgar;\n    this.from = from;\n    this.to = to;\n    this.volume = volume;\n    this.touchtip = touchtip;\n    this.airgap = airgap;\n    this.blowout = blowout;\n    this.blowoutLocation = blowoutLocation;\n  }\n\n  getPythonString(prev: Step[], nextList: Step[]): string {\n    const [last] = prev.slice(-1)\n    const next = nextList?.[0]\n\n    let mixString = \"\"\n\n    if (last?.type === StepType.MIX && last?.from?.pythonString() === this.from.pythonString()) {\n      mixString += `mix_before=(${last.times}, ${last.volume}), `\n    }\n    if (next?.type === StepType.MIX && next?.from?.pythonString() === this.to.pythonString()) {\n      mixString += `mix_after=(${next.times}, ${next.volume}), `\n    }\n\n\n    return `\n\n# ${this.type};${JSON.stringify(this)}\npipette.transfer(${this.volume}, ${this.from.pythonString()}, ${this.to.pythonString()}.bottom(${this.heightOfAgar}), ${mixString}touch_tip=${this.touchtip.toString().charAt(0).toUpperCase() + this.touchtip.toString().slice(1)},${this.airgap === 0 ? '' : ' air_gap=' + this.airgap + ','} new_tip='always', blow_out=${this.blowout.toString().charAt(0).toUpperCase() + this.blowout.toString().slice(1)}, blowout_location='${this.blowoutLocation}')`;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {from, volume, touchtip, airgap, heightOfAgar, to, blowout, blowoutLocation} = JSON.parse(json) as { to: JSONWell, from: JSONWell, volume: number, touchtip: boolean, airgap: number, heightOfAgar: number, blowout: boolean, blowoutLocation: string }\n    return new Plate({from: fromJSONWelltoWell(from), to: fromJSONWelltoWell(to), volume, touchtip, airgap, heightOfAgar, blowout, blowoutLocation})\n  }\n\n\n}\n\nexport class Wait implements Step {\n  [k: string]: any;\n\n  type = StepType.WAIT;\n\n  constructor({ duration}: { duration: number }) {\n\n    this.duration = duration;\n  }\n\n  getPythonString(stepsBefore: Step[]): string {\n    return `\n# ${this.type};${JSON.stringify(this)}\nprotocol.delay(seconds=${this.duration})\n    `;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n    const {duration} = JSON.parse(json) as {duration: number }\n\n    return new Wait({duration})\n  }\n}\n\nexport class ChangeSpeed implements Step {\n  [k: string]: any;\n\n  type = StepType.CHANGESPEED;\n\n  constructor({ pipetteSpeeds}: { pipetteSpeeds: number[] }) {\n\n    this.pipetteSpeeds = pipetteSpeeds;\n  }\n\n  getPythonString(stepsBefore: Step[]): string {\n    return `\n# ${this.type};${JSON.stringify(this)}\npipette.flow_rate.aspirate = ${this.pipetteSpeeds[0]}\npipette.flow_rate.dispense = ${this.pipetteSpeeds[1]}\npipette.flow_rate.blow_out = ${this.pipetteSpeeds[2]}\n    `;\n  }\n\n  id: string = `${Math.floor(Math.random() * 1e6)}`\n\n  static fromImportComment(comment: string): Step {\n    const [, json] = comment.split(\";\")\n\n    const {pipetteSpeeds} = JSON.parse(json) as {pipetteSpeeds: number[]}\n    return new ChangeSpeed({pipetteSpeeds})\n  }\n}\n\nexport enum LabwareType {\n  WellPlate96 = \"96 Well Plate\",\n  OpentronsTipRack = \"Opentrons Tip Rack\",\n  WellPlate6 = \"6 Well Plate\",\n  WellPlate12 = \"12 Well Plate\",\n  WellPlate24 = \"24 Well Plate\",\n  WellPlate48 = \"48 Well Plate\",\n  Reservoir12 = \"12 Well Reservoir\",\n  TubeRack15Falcon15 = \"15 Slot Falcon Tube Rack\",\n  TubeRack24Eppendorf15 = \"24 Slot Eppendorf 1.5mL Tube Rack\",\n  FalconPetriDish90mm = \"90mm Falcon Petri Dish\",\n}\n\n\nexport interface Labware {\n  readonly type: LabwareType\n\n  readonly name: string\n\n  getPythonInit(): string\n\n  readonly slot: number\n}\n\nexport class OpentronsTipRack implements Labware {\n  readonly type = LabwareType.OpentronsTipRack\n  readonly name: string;\n  readonly slot: number;\n\n  constructor(slot: number) {\n    this.name = \"opentrons_tip_rack_in_\" + slot;\n    this.slot = slot;\n  }\n\n  getPythonInit(): string {\n    return `\n# ${LabwareType.OpentronsTipRack};${JSON.stringify(this)}\n${this.name} = protocol.load_labware('opentrons_96_tiprack_300ul', ${this.slot})`;\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new OpentronsTipRack(slot)\n  }\n}\n\nexport interface WellPlate extends Labware {\n  readonly wells: Well[];\n  numOfNumberWells: number;\n  numOfLetterWells: number;\n  isWellPlate: true;\n  readonly wellHeight: number //from opentrons labware definitions\n  readonly wellDiameter: number //from opentrons labware definitions\n}\n\nexport function instanceOfWellPlate(object: any): object is WellPlate {\n  return object.isWellPlate;\n}\n\ninterface JSONWell {\n  isJSONWell: true\n  wellPlateType: LabwareType\n  slot: number,\n  locationString: string\n}\n\nconst fromJSONWelltoWell: (jw: JSONWell) => Well = (jw): Well => {\n  switch (jw.wellPlateType) {\n    case LabwareType.WellPlate6:\n      const wp1 = new WellPlate6(jw.slot)\n      return wp1.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.WellPlate12:\n      const wp2 = new WellPlate12(jw.slot)\n      return wp2.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.WellPlate24:\n      const wp3 = new WellPlate24(jw.slot)\n      return wp3.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.WellPlate48:\n      const wp4 = new WellPlate48(jw.slot)\n      return wp4.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.Reservoir12:\n      const wp5 = new Reservoir12(jw.slot)\n      return wp5.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.TubeRack15Falcon15:\n      const wp6 = new TubeRack15Falcon15(jw.slot)\n      return wp6.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.TubeRack24Eppendorf15:\n      const wp7 = new TubeRack24Eppendorf15(jw.slot)\n      return wp7.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.WellPlate96:\n      const wp = new WellPlate96(jw.slot)\n      return wp.wells.find(v => v.locationString === jw.locationString) as Well\n    case LabwareType.FalconPetriDish90mm:\n      const wp8 = new FalconPetriDish90mm(jw.slot)\n      return wp8.wells.find(v => v.locationString === jw.locationString) as Well\n  }\n  throw Error(\"Unknown Labware\")\n}\n\nexport class Well {\n  wellPlate: WellPlate\n  locationString: string\n\n  constructor(wellPlate: WellPlate, wellString: string) {\n    this.wellPlate = wellPlate;\n    this.locationString = wellString;\n  }\n\n  toJSON(): JSONWell {\n    return {\n      isJSONWell: true,\n      wellPlateType: this.wellPlate.type,\n      slot: this.wellPlate.slot,\n      locationString: this.locationString\n    }\n  }\n\n  toString(): string {\n    return `${this.locationString} in \"${this.wellPlate.type}\" at slot ${this.wellPlate.slot}`\n  }\n\n  pythonString(): string {\n    return `${this.wellPlate.name}[\"${this.locationString}\"]`\n  }\n\n  heightOfLiquidInWellFromBottomOfWell(steps: Step[]): number {\n    // returns the height of the liquid in a well for calculating the distance offset for the laser\n    // returns the height of the total well if there is no liquid\n    let currentVolume = 0;\n    for (let step of steps) {\n      if (\n        step?.to?.wellPlate.name === this.wellPlate.name &&\n        step?.to?.locationString === this.locationString\n      ) {\n        currentVolume += step?.volume ?? 0;\n      } else if (step?.from?.wellPlate.name === this.wellPlate.name &&\n        step?.from?.locationString === this.locationString) {\n        currentVolume -= step?.volume ?? 0;\n      }\n    }\n    if (currentVolume === 0) return this.wellPlate.wellHeight\n    const height = currentVolume / (Math.PI * (this.wellPlate.wellDiameter / 2) * (this.wellPlate.wellDiameter / 2))\n    return Math.round(height * 1e2) / 1e2 // round to 2 decimal places\n  }\n\n}\n\nexport class WellPlateN implements WellPlate {\n  readonly wellHeight: number //from opentrons labware definitions\n  readonly wellDiameter: number //from opentrons labware definitions\n  readonly type: LabwareType\n  readonly name: string; // an unique name\n  readonly wells: Well[]; // the wells in this plate\n  readonly slot: number;\n  readonly numOfLetterWells: number; // number of wells on letter side\n  readonly numOfNumberWells: number; // number of wells on number side\n  private readonly loadLabwareString: string;\n  readonly isWellPlate: true = true;\n\n  constructor({\n                wellDiameter, wellHeight,\n                numberOfWells, type, slot, numOfLetterWells, numOfNumberWells, loadLabwareString\n              }: {\n    wellHeight: number, wellDiameter: number, numOfNumberWells: number, numOfLetterWells: number,\n    numberOfWells: number, type: LabwareType, slot: number, loadLabwareString: string\n  }) {\n    this.type = type\n    this.wells = []\n    this.wellHeight = wellHeight;\n    this.wellDiameter = wellDiameter\n    this.numOfLetterWells = numOfLetterWells;\n    this.numOfNumberWells = numOfNumberWells\n    this.loadLabwareString = loadLabwareString\n    this.slot = slot\n    this.name = \"the_\" + numberOfWells + \"_well_plate_in_\" + slot\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n    const usedLetters = letters.slice(0, numOfLetterWells)\n    usedLetters.forEach(val => {\n      for (let i = 0; i < numOfNumberWells; i++) {\n        this.wells.push(new Well(this, val + (i + 1)))\n      }\n    })\n  }\n\n  getPythonInit(): string {\n    return `\n# ${this.type};${JSON.stringify({slot: this.slot})}\n${this.name} = protocol.load_labware('${this.loadLabwareString}', ${this.slot})`;\n  }\n}\n\nexport class WellPlate6 extends WellPlateN {\n  constructor(slot: number) {\n    super({\n      wellHeight: 17.40,\n      wellDiameter: 35.43,\n      numberOfWells: 6,\n      type: LabwareType.WellPlate6,\n      numOfLetterWells: 2,\n      numOfNumberWells: 3,\n      loadLabwareString: \"corning_6_wellplate_16.8ml_flat\",\n      slot\n    });\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new WellPlate6(slot)\n  }\n}\n\nexport class WellPlate12 extends WellPlateN {\n  constructor(slot: number) {\n    super({\n      wellHeight: 17.53,\n      wellDiameter: 22.73,\n      numberOfWells: 12,\n      type: LabwareType.WellPlate12,\n      numOfLetterWells: 3,\n      numOfNumberWells: 4,\n      loadLabwareString: \"corning_12_wellplate_6.9ml_flat\",\n      slot\n    });\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new WellPlate12(slot)\n  }\n}\n\nexport class WellPlate24 extends WellPlateN {\n  constructor(slot: number) {\n    super({\n      wellHeight: 17.40,\n      wellDiameter: 16.26,\n      numberOfWells: 24,\n      type: LabwareType.WellPlate24,\n      numOfLetterWells: 4,\n      numOfNumberWells: 6,\n      loadLabwareString: \"corning_24_wellplate_3.4ml_flat\",\n      slot\n    });\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new WellPlate24(slot)\n  }\n}\n\nexport class WellPlate48 extends WellPlateN {\n  constructor(slot: number) {\n    super({\n      wellHeight: 17.40,\n      wellDiameter: 11.56,\n      numberOfWells: 48,\n      type: LabwareType.WellPlate48,\n      numOfLetterWells: 6,\n      numOfNumberWells: 8,\n      loadLabwareString: \"corning_48_wellplate_1.6ml_flat\",\n      slot\n    });\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new WellPlate48(slot)\n  }\n}\n\nexport class WellPlate96 extends WellPlateN {\n  constructor(slot: number) {\n    super({\n      wellHeight: 10.67,\n      wellDiameter: 6.86,\n      numberOfWells: 96,\n      type: LabwareType.WellPlate96,\n      numOfLetterWells: 8,\n      numOfNumberWells: 12,\n      loadLabwareString: \"corning_96_wellplate_360ul_flat\",\n      slot\n    });\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new WellPlate96(slot)\n  }\n}\n\nexport class Reservoir12 implements WellPlate {\n  isWellPlate: true = true;\n  readonly name: string;\n  numOfLetterWells = 1;\n  numOfNumberWells = 12;\n  readonly slot: number;\n  readonly type = LabwareType.Reservoir12;\n  readonly wells: Well[];\n\n  getPythonInit(): string {\n    return `\n# ${this.type};${JSON.stringify({slot: this.slot})}\n${this.name} = protocol.load_labware('usascientific_12_reservoir_22ml', ${this.slot})`;\n  }\n\n  constructor(slot: number) {\n    this.name = \"the_12_well_reservoir_in_slot_\" + slot\n    this.slot = slot;\n    this.wells = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(v => new Well(this, \"A\" + v))\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new Reservoir12(slot)\n  }\n\n  get wellDiameter(): number {\n    throw new Error(\"Accessing Reservoir12 well size!!!\")\n  }\n\n  get wellHeight(): number {\n    throw new Error(\"Accessing Reservoir12 well size!!!\")\n  }\n\n}\n\nexport class TubeRack15Falcon15 implements WellPlate {\n  isWellPlate: true = true;\n  readonly name: string;\n  numOfLetterWells = 3;\n  numOfNumberWells = 5;\n  readonly slot: number;\n  readonly type = LabwareType.TubeRack15Falcon15;\n  readonly wells: Well[];\n  readonly wellDiameter = 14.90;\n\n  getPythonInit(): string {\n    return `\n# ${this.type};${JSON.stringify({slot: this.slot})}\n${this.name} = protocol.load_labware('opentrons_15_tuberack_falcon_15ml_conical', ${this.slot})`;\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new TubeRack15Falcon15(slot)\n  }\n\n  constructor(slot: number) {\n    this.name = \"the_falcon_tube_rack_15ml_in_slot_\" + slot\n    this.wells = []\n    this.slot = slot\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n    const usedLetters = letters.slice(0, this.numOfLetterWells)\n    usedLetters.forEach(val => {\n      for (let i = 1; i <= this.numOfNumberWells; i++) {\n        this.wells.push(new Well(this, val + i))\n      }\n    })\n  }\n\n  get wellHeight(): number {\n    throw new Error(\"Accessing TubeRack15Falcon15 well size!!!\")\n  }\n}\n\nexport class TubeRack24Eppendorf15 implements WellPlate {\n  isWellPlate: true = true;\n  readonly name: string;\n  numOfLetterWells = 4;\n  numOfNumberWells = 6;\n  readonly slot: number;\n  readonly type = LabwareType.TubeRack24Eppendorf15;\n  readonly wells: Well[];\n  readonly wellDiameter = 8.70;\n\n  getPythonInit(): string {\n    return `\n# ${this.type};${JSON.stringify({slot: this.slot})}\n${this.name} = protocol.load_labware('opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', ${this.slot})`;\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new TubeRack24Eppendorf15(slot)\n  }\n\n  constructor(slot: number) {\n    this.name = \"the_eppendorf_tube_rack_1500ul_in_slot_\" + slot\n    this.wells = []\n    this.slot = slot\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n    const usedLetters = letters.slice(0, this.numOfLetterWells)\n    usedLetters.forEach(val => {\n      for (let i = 1; i <= this.numOfNumberWells; i++) {\n        this.wells.push(new Well(this, val + i))\n      }\n    })\n  }\n\n  get wellHeight(): number {\n    throw new Error(\"Accessing TubeRack24Eppendorf15 well size!!!\")\n  }\n}\n\nexport class FalconPetriDish90mm implements WellPlate {\n  isWellPlate: true = true;\n  readonly name: string;\n  numOfLetterWells = 3;\n  numOfNumberWells = 3;\n  readonly slot: number;\n  readonly type = LabwareType.FalconPetriDish90mm;\n  readonly wells: Well[];\n  readonly wellDiameter = 20.66;\n\n  getPythonInit(): string {\n    return `\n# ${this.type};${JSON.stringify({slot: this.slot})}\n${this.name} = protocol.load_labware('falcon_petri_dish_90mm', ${this.slot})`;\n  }\n\n  static fromImportComment(comment: string): Labware {\n    const [, json] = comment.split(\";\")\n    const {slot} = JSON.parse(json) as { slot: number }\n    return new FalconPetriDish90mm(slot)\n  }\n\n  constructor(slot: number) {\n    this.name = \"the_falcon_petri_dish_90mm_in_slot_\" + slot\n    this.wells = []\n    this.slot = slot\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n    const usedLetters = letters.slice(0, this.numOfLetterWells)\n    usedLetters.forEach(val => {\n      for (let i = 1; i <= this.numOfNumberWells; i++) {\n        this.wells.push(new Well(this, val + i))\n      }\n    })\n  }\n\n  get wellHeight(): number {\n    throw new Error(\"Accessing Falcon Petri Dish 90mm well size!!!\")\n  }\n}","import React, {FC} from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Paper,\n  Theme, Typography\n} from \"@material-ui/core\";\nimport {Step} from \"../datatypes\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ArrowDownward, ArrowUpward, Delete, FileCopy} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n      margin: theme.spacing(4, 0, 2),\n    },\n    noStepsDiv: {\n      padding: 16,\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    highlight: {\n      backgroundColor: \"#cff0ff\",\n      border: \"#a8c5d2 solid 2px\"\n    }\n  }),\n);\n\ninterface StepListProps {\n  steps: Step[]\n  onCopy: (id: string) => void\n  onClickItem: (item: Step) => void\n  onMoveUp: (id: string) => void\n  onMoveDown: (id: string) => void\n  onDelete: (id: string) => void\n  highlightItemId?: string\n}\n\n\nfunction getListItemText(step: Step) {\n  const secondaryArray: string[] = []\n  if (step.volume) {\n    secondaryArray.push(\"Vol: \" + step.volume + \"µL\")\n  }\n  if (step.from) {\n    secondaryArray.push(\"From: \" + step.from)\n  }\n  if (step.to) {\n    secondaryArray.push(\"To: \" + step.to)\n  }\n  if (step.duration) {\n    secondaryArray.push(\"Duration: \" + step.duration + \" sec\")\n  }\n  if (step.location) {\n    secondaryArray.push(\"Over: \" + step.location)\n  }\n  if (step.heightOfAgar) {\n    secondaryArray.push(\"with Agar height: \" + step.heightOfAgar + \"mm\")\n  }\n  if (step.times) {\n    secondaryArray.push(step.times + \" times\")\n  }\n  if (step.touchtip) {\n    secondaryArray.push(\"Touch tip: \" + step.touchtip)\n  }\n  if (step.airgap) {\n    secondaryArray.push(\"Airgap: \" + step.airgap + \"µL\")\n  }\n  if (step.blowout) {\n    secondaryArray.push(\"Blowout: \" + step.blowout)\n  }\n  if (step.blowout && step.blowoutLocation) {\n    secondaryArray.push(\"Blowout Location: \" + step.blowoutLocation)\n  }\n  if (step.sterility) {\n    secondaryArray.push(\"New tip: \" + step.sterility)\n  }\n  if (step.pipetteSpeeds) {\n    secondaryArray.push(\"Aspirate Speed: \" + step.pipetteSpeeds[0] + \"µL/sec\")\n    secondaryArray.push(\"Dispense Speed: \" + step.pipetteSpeeds[1] + \"µL/sec\")\n    secondaryArray.push(\"Blowout Speed: \" + step.pipetteSpeeds[2] + \"µL/sec\")\n  }\n\n  return <ListItemText\n    primary={step.type}\n    secondary={secondaryArray.map(v => <Typography variant=\"body2\">{v}</Typography>)}\n  />\n}\n\nexport const StepList: FC<StepListProps> = ({steps, onCopy, onClickItem, onMoveUp, onMoveDown, onDelete, highlightItemId}) => {\n  const classes = useStyles()\n  return (\n    <Paper className={classes.demo}>\n      <List>\n        {steps.length === 0 && <div className={classes.noStepsDiv}><Typography variant=\"h5\">\n          No Steps Added\n        </Typography></div>}\n        {steps.map((step, i) => (\n          <ListItem\n            className={(step.id === highlightItemId) ? classes.highlight : \"\"}\n            onClick={() => {\n              onClickItem(step)\n            }} button key={step.id}\n          >\n            <ListItemIcon>\n              {i + 1}.\n            </ListItemIcon>\n            {getListItemText(step)}\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => {\n                onCopy(step.id)\n              }} edge=\"end\" aria-label=\"move down\">\n                <FileCopy/>\n              </IconButton>\n              <IconButton onClick={() => {\n                onMoveUp(step.id)\n              }} edge=\"end\" aria-label=\"move up\">\n                <ArrowUpward/>\n              </IconButton>\n              <IconButton onClick={() => {\n                onMoveDown(step.id)\n              }} edge=\"end\" aria-label=\"move down\">\n                <ArrowDownward/>\n              </IconButton>\n              <IconButton onClick={() => {\n                onDelete(step.id)\n              }} edge=\"end\" aria-label=\"move down\">\n                <Delete/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  )\n}","import {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const {children, classes, onClose, ...other} = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n  <Typography variant=\"h6\">{children}</Typography>\n  {onClose ? (\n    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n    <CloseIcon/>\n    </IconButton>\n  ) : null}\n  </MuiDialogTitle>\n);\n});\n\nexport const DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    display: \"grid\",\n    rowGap: \"16px\",\n    gridRow: \"auto\",\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport const DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);","import {instanceOfWellPlate, Labware, OpentronsTipRack, Well, WellPlate} from \"../../../datatypes\";\nimport React, {FC, Fragment, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {FormControl, InputLabel, MenuItem, Select, Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useWellPlateButtonsStyles = (wellPlate: WellPlate | undefined) => makeStyles(theme => {\n\n  let obj: any = {}\n\n  if (wellPlate) {\n    obj = {\n      labwareGrid: {\n        gap: \"8px\",\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${wellPlate.numOfNumberWells}, 1fr)`,\n        gridTemplateRows: `repeat(${wellPlate.numOfLetterWells}, 1fr)`\n      }\n    }\n    for (let row = 0; row < wellPlate?.numOfNumberWells; row++) {\n      for (let col = 0; col < wellPlate?.numOfLetterWells; col++) {\n\n        try {\n          obj[wellPlate?.wells[col * wellPlate?.numOfNumberWells + row].locationString] = {\n            gridColumn: `${row + 1} / span 1`,\n            gridRow: `${col + 1} / span 1`\n          }\n        } catch (e) {\n          console.error(\"Error in well style\", {\n            row,\n            col,\n            wellPlate,\n            wells: wellPlate?.wells,\n            num: col * wellPlate?.numOfNumberWells + row\n          })\n        }\n      }\n    }\n  }\n\n\n  return {\n    ...obj,\n    button: {\n      borderRadius: \"5em\",\n      // padding:0,\n      // numOfNumberWells:\"100%\"\n    },\n    buttonSelected: {\n      backgroundColor: \"lightBlue\",\n      color: \"#222222 !important\"\n    },\n    wellPlateButtonsGrid: {\n      border: \"1px solid lightGrey\",\n      margin: \"16px auto\",\n      padding: \"8px\"\n    },\n    gridItem: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    }\n  }\n})\n\nconst WellPlateButtons: FC<{ wellPlate: WellPlate | undefined, currentWell: Well | undefined, setWell: (w: Well) => void }> = ({wellPlate, setWell, currentWell}) => {\n  const classes: any = useWellPlateButtonsStyles(wellPlate)()\n\n  if (wellPlate === undefined) return null\n\n\n  const currentWellIndex = wellPlate.wells.findIndex(w => currentWell?.locationString === w.locationString)\n  const getClassForButton = (index: number) => {\n    if (index === currentWellIndex) {\n      return classes?.['buttonSelected'] + \" \" + classes?.['button']\n    } else {\n      return classes?.['button']\n    }\n  }\n  return (\n    <Fragment>\n      <div className={classes?.[\"labwareGrid\"]}>\n        {\n          wellPlate.wells.map(\n            (w, index) =>\n              // <Grid className={classes.gridItem} key={index} item\n              //       xs={(12 / wellPlate?.numOfNumberWells) as boolean | 12 | 8 | \"auto\" | 1 | 2 | 10 | 4 | 3 | 5 | 6 | 7 | 9 | 11 | undefined}>\n\n                <Button onClick={() => {\n                  setWell(w)\n                }} disabled={index === currentWellIndex} size={\"small\"} variant={\"outlined\"}\n                        className={getClassForButton(index) + \" \" + classes?.[w.locationString]}>{w.locationString}</Button>\n\n            // </Grid>\n          )\n        }\n      </div>\n    </Fragment>\n  )\n\n}\n\n\nconst useWellPlatesSelectStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n  },\n}))\n\ninterface WellPlatesSelectProps {\n  wellPlates: WellPlate[],\n  name: string,\n  currentWellPlate: WellPlate | undefined,\n  setWellPlate: (wellPlate: WellPlate) => void\n}\n\nconst WellPlatesSelect: FC<WellPlatesSelectProps> = ({wellPlates, name, currentWellPlate, setWellPlate}) => {\n  const classes = useWellPlatesSelectStyles()\n  if (wellPlates.length === 0) return null\n  const indexOfCurrent = wellPlates.findIndex((plate => plate.name === currentWellPlate?.name))\n  const currentValue = (indexOfCurrent !== -1) ? indexOfCurrent : \"\"\n\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id={\"select-label-\" + name}>{name}</InputLabel>\n      <Select\n        // displayEmpty\n        value={currentValue}\n        labelId={\"select-label-\" + name}\n        onChange={e => {\n          const index = e.target.value as number\n          setWellPlate(wellPlates[index])\n        }}\n      >\n        {wellPlates.map((plate, pIndex,) =>\n          <MenuItem value={pIndex} key={plate.name}>{plate.name}</MenuItem>,\n        )}\n      </Select>\n    </FormControl>\n  )\n\n\n}\n\nconst useWellSelectStyles = makeStyles(theme => ({\n  errorMessage: {\n    color: \"crimson\"\n  }\n}))\n\ninterface WellSelectProps {\n  name: string,\n  availableLabware: Labware[],\n  initialWell?: Well,\n  well?: Well,\n  setWell: (w: Well) => void\n  hide?: boolean\n}\n\nexport const WellSelect: FC<WellSelectProps> = ({name, hide, availableLabware, initialWell, well, setWell}) => {\n\n  const classes = useWellSelectStyles()\n  const [wellPlate, setWellPlate] = React.useState<WellPlate | undefined>(initialWell?.wellPlate)\n  useEffect(() => {\n    setWellPlate(initialWell?.wellPlate)\n  }, [initialWell])\n  if (hide) return null\n  const wellPlates = availableLabware\n    .filter((labware) => instanceOfWellPlate(labware))\n    .map(val => (val as WellPlate))\n  const tipRacks = availableLabware\n    .filter((labware) => OpentronsTipRack)\n    .map(val => (val as OpentronsTipRack))\n\n  return <Fragment>\n    {(tipRacks.length === 0 ) &&\n    <Typography className={classes.errorMessage} variant=\"h4\">No Tip Racks Available!</Typography>\n    }\n    {(wellPlates.length === 0) &&\n    <Typography className={classes.errorMessage} variant=\"h4\">No Well Plates Available!</Typography>\n    }\n    <WellPlatesSelect wellPlates={wellPlates}\n                      currentWellPlate={wellPlate}\n                      setWellPlate={(wellPlate: WellPlate) => {\n                        setWellPlate(wellPlate)\n                      }}\n                      name={name}/>\n    <WellPlateButtons currentWell={well?.wellPlate?.name === wellPlate?.name ? well : undefined}\n                      setWell={setWell}\n                      wellPlate={wellPlate}/>\n  </Fragment>\n}\n","import React, {FC, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport {Step, stepTypeHas, Labware, Well} from \"../../datatypes\";\nimport {TextField, Checkbox, FormControlLabel, FormControl, Select, InputLabel, MenuItem, Grid} from \"@material-ui/core\";\nimport {DialogActions, DialogContent, DialogTitle} from \"./shared/DialogStyledComponents\";\nimport {WellSelect} from \"./shared/WellSelect\";\n\n\ninterface StepDialogProps {\n  availableLabware: Labware[],\n  initialStep: Step\n  handleClose: () => void\n  handleSave: (step: Step) => void\n  open: boolean\n}\n\nexport const StepEditDialog: FC<StepDialogProps> = ({initialStep, handleClose, handleSave, open, availableLabware}) => {\n\n  useEffect(() => {\n    setFrom(initialStep?.from)\n    setTo(initialStep?.to)\n    setDuration(initialStep?.duration ?? 0)\n    setLocation(initialStep?.location)\n    setVolume(initialStep?.volume ?? 0)\n    setTouchTip(initialStep?.touchtip ?? true)\n    setAirgap(initialStep?.airgap ?? 0)\n    setBlowout(initialStep?.blowout ?? false)\n    setBlowoutLocation(initialStep?.blowoutLocation ?? \"trash\")\n    setTimes(initialStep?.times ?? 0)\n    setHeightOfAgar(initialStep?.heightOfAgar ?? 0)\n    setSterility(initialStep?.sterility ?? \"once\")\n    setPipetteSpeeds(initialStep?.pipetteSpeeds ?? [92.86, 92.86, 92.86])\n\n  }, [initialStep]);\n\n\n  const [from, setFrom]                       = React.useState<Well | undefined>(initialStep?.from)\n  const [to, setTo]                           = React.useState<Well | undefined>(initialStep?.to)\n  const [duration, setDuration]               = React.useState<number>(initialStep?.duration ?? 0)\n  const [location, setLocation]               = React.useState<Well | undefined>(initialStep?.location)\n  const [volume, setVolume]                   = React.useState<number>(initialStep?.volume ?? 0)\n  const [touchtip, setTouchTip]               = React.useState<boolean>(initialStep?.touchtip ?? true)\n  const [airgap, setAirgap]                   = React.useState<number>(initialStep?.airgap ?? 0)\n  const [blowout, setBlowout]                 = React.useState<boolean>(initialStep?.blowout ?? false)\n  const [blowoutLocation, setBlowoutLocation] = React.useState<string>(initialStep?.blowoutLocation ?? \"trash\")\n  const [times, setTimes]                     = React.useState<number>(initialStep?.times ?? 0)\n  const [heightOfAgar, setHeightOfAgar]       = React.useState<number>(initialStep?.heightOfAgar ?? 0)\n  const [sterility, setSterility]             = React.useState<string>(initialStep?.sterility ?? \"once\")\n  const [pipetteSpeeds, setPipetteSpeeds]     = React.useState<number[]>(initialStep?.pipetteSpeeds ?? [92.86, 92.86, 92.86])\n\n  return (\n    <Dialog maxWidth={\"md\"} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {initialStep.type}\n      </DialogTitle>\n      <DialogContent dividers>\n        <WellSelect availableLabware={availableLabware}\n                    initialWell={initialStep?.from}\n                    setWell={(w) => {\n                      setFrom(w)\n                    }}\n                    well={from}\n                    hide={initialStep?.from === undefined}\n                    name={\"From\"}/>\n        <WellSelect availableLabware={availableLabware}\n                    initialWell={initialStep?.to}\n                    setWell={(w) => {\n                      setTo(w)\n                    }}\n                    well={to}\n                    hide={initialStep?.to === undefined}\n                    name={\"Into\"}/>\n\n        <WellSelect availableLabware={availableLabware}\n                    initialWell={initialStep?.location}\n                    setWell={(w) => {\n                      setLocation(w)\n                    }}\n                    well={location}\n                    hide={initialStep?.location === undefined}\n                    name={\"Over\"}/>\n\n        {initialStep?.volume && <TextField type=\"number\" onChange={(e) => {\n          e.persist();\n          setVolume(Number(e.target.value))\n        }} id=\"outlined-basic\" label=\"Volume [µL]\" variant=\"outlined\" value={(volume === 0) ? \"\" : volume}/>}\n\n        {(initialStep?.touchtip === false || initialStep?.touchtip === true) && (<FormControlLabel control={<Checkbox onChange={(e) => {\n          e.persist();\n          setTouchTip(Boolean(e.target.checked))\n        }} checked={touchtip}/>} label=\"Touch Tip\"/>)}\n\n        {stepTypeHas(initialStep?.type, \"airgap\") ? <TextField type=\"number\" onChange={(e) => {\n          e.persist();\n          setAirgap(Number(e.target.value))\n        }} id=\"outlined-basic\" label=\"Airgap after Aspirate\" variant=\"outlined\" value={(airgap === 0) ? \"\" : airgap}/> : ''}\n\n        <Grid container spacing={2}>\n          <Grid item xs>\n            {(initialStep?.blowout === false || initialStep?.blowout === true) && (<FormControlLabel control={<Checkbox onChange={(e) => {\n              e.persist();\n              setBlowout(Boolean(e.target.checked))\n            }} checked={blowout}/>} label=\"Blowout after Dispense\"/>)}\n          </Grid>\n          <Grid item md hidden={!blowout}>\n            {(initialStep?.blowoutLocation && blowout === true) && <FormControl>\n              <InputLabel id={\"blowout-location-label\"}>Blowout Location</InputLabel>\n              <Select labelId={\"blowout-location-label\"} onChange={(e) => {\n                e.persist();\n                setBlowoutLocation(e.target.value as string)\n              }} id=\"select-blowoutlocation\" value={blowoutLocation} >\n                <MenuItem value=\"destination well\">Destination Well</MenuItem>\n                <MenuItem value=\"source well\">Source Well</MenuItem>\n                <MenuItem value=\"trash\">Trash</MenuItem>\n              </Select>\n            </FormControl>}\n          </Grid>\n        </Grid>\n\n        {initialStep?.times && <TextField type=\"number\" onChange={(e) => {\n          e.persist();\n          setTimes(Number(e.target.value))\n        }} id=\"outlined-basic\" label=\"Times to mix\" variant=\"outlined\" value={(times === 0) ? \"\" : times}/>}\n\n        {stepTypeHas(initialStep?.type, \"heightOfAgar\") ? <TextField type=\"number\" onChange={(e) => {\n          e.persist();\n          setHeightOfAgar(Number(e.target.value))\n        }} id=\"outlined-basic\" label=\"Height of Agar [mm]\" variant=\"outlined\"\n                                                                    value={(heightOfAgar === 0) ? \"\" : heightOfAgar}/> : ''}\n\n        {initialStep?.duration && <TextField type=\"number\" onChange={(e) => {\n          e.persist();\n          setDuration(Number(e.target.value))\n        }} id=\"outlined-basic\" label=\"Duration [sec]\" variant=\"outlined\" value={(duration === 0) ? \"\" : duration}/>}\n\n        {initialStep?.sterility && <FormControl>\n          <InputLabel id={\"sterility-label\"}>Change Tip</InputLabel>\n          <Select labelId={\"sterility-label\"} onChange={(e) => {\n            e.persist();\n            setSterility(e.target.value as string)\n          }} id=\"select\" value={sterility} >\n            <MenuItem value=\"once\">Once at start of step</MenuItem>\n            <MenuItem value=\"always\">Before every aspirate</MenuItem>\n            <MenuItem value=\"never\">Never</MenuItem>\n          </Select>\n        </FormControl>}\n\n        {stepTypeHas(initialStep?.type, \"pipetteSpeeds\") && (<Grid container spacing={2}> \n          <Grid item xs={3}>\n            <TextField\n              onChange={(e) => {\n                e.persist();\n                setPipetteSpeeds([Number(e.target.value), pipetteSpeeds[1], pipetteSpeeds[2]])\n              }}\n              label=\"Aspirate Speed (µL/sec)\"\n              variant=\"outlined\"\n              value={pipetteSpeeds[0]}\n            />\n            <Button onClick={() => {\n              setPipetteSpeeds([92.86, pipetteSpeeds[1], pipetteSpeeds[2]])\n              }}\n                color=\"primary\">\n              Reset to Default\n            </Button>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              onChange={(e) => {\n                e.persist();\n                setPipetteSpeeds([pipetteSpeeds[0], Number(e.target.value), pipetteSpeeds[2]])\n              }}\n              label=\"Dispense Speed (µL/sec)\"\n              variant=\"outlined\"\n              value={pipetteSpeeds[1]}\n            />  \n            <Button onClick={() => {\n              setPipetteSpeeds([pipetteSpeeds[0], 92.86, pipetteSpeeds[2]])\n              }}\n                color=\"primary\">\n              Reset to Default\n            </Button>\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              onChange={(e) => {\n                e.persist();\n                setPipetteSpeeds([pipetteSpeeds[0], pipetteSpeeds[1], Number(e.target.value)])\n              }}\n              label=\"Blowout Speed (µL/sec)\"\n              variant=\"outlined\"\n              value={pipetteSpeeds[2]}\n            />     \n            <Button onClick={() => {\n              setPipetteSpeeds([pipetteSpeeds[0], pipetteSpeeds[1], 92.86])\n              }}\n                color=\"primary\">\n              Reset to Default\n            </Button>\n          </Grid>\n        </Grid>)}\n\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button autoFocus onClick={() => {\n          if (initialStep?.to) {\n            initialStep.to = to\n          }\n          if (initialStep?.from) {\n            initialStep.from = from\n          }\n          if (stepTypeHas(initialStep?.type, \"volume\")) {\n            if (volume !== 0) {\n              initialStep.volume = volume\n            }\n          }\n          if (initialStep?.touchtip === false || initialStep?.touchtip === true) {\n            initialStep.touchtip = touchtip\n          }\n          if (stepTypeHas(initialStep?.type, \"airgap\")) {\n            initialStep.airgap = airgap\n          }\n          if (initialStep?.blowout === false || initialStep?.blowout === true) {\n            initialStep.blowout = blowout\n          }\n          if (initialStep?.blowoutLocation) {\n            initialStep.blowoutLocation = blowoutLocation\n          }\n          if (initialStep?.location) {\n            initialStep.location = location\n          }\n          if (initialStep?.duration) {\n            if (duration !== 0) {\n              initialStep.duration = duration\n            }\n          }\n          if (initialStep?.times) {\n            initialStep.times = times\n          }\n          if (stepTypeHas(initialStep?.type, \"heightOfAgar\")) {\n            if (heightOfAgar !== 0) {\n              initialStep.heightOfAgar = heightOfAgar\n            }\n          }\n          if (initialStep?.sterility) {\n            initialStep.sterility = sterility\n          }\n          if (stepTypeHas(initialStep?.type, \"pipetteSpeeds\")) {\n            initialStep.pipetteSpeeds = pipetteSpeeds\n          }\n          if (initialStep)\n            handleSave(initialStep);\n          handleClose()\n        }} color=\"primary\">\n          Save changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n\n\n\n\n","import React, {FC, useState, useEffect} from \"react\";\nimport {Container, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport {Labware, LabwareType} from \"../datatypes\";\nimport {onUpdateSelectedOptions} from \"../App\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1),\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}))\n\n\ninterface BasePlateSelectProps {\n  labware: LabwareType[]\n  onUpdateSelected: (selected: onUpdateSelectedOptions[]) => void\n  currentSelected: Labware[]\n}\n\n\nexport const BasePlateSelect: FC<BasePlateSelectProps> = ({currentSelected, labware, onUpdateSelected}) => {\n  const classes = useStyles()\n  useEffect(()=>{\n    const blank = Array(12).fill(null).map(() => \"\")\n    currentSelected.forEach(v => {\n      blank[slotToRealIndex(v.slot)] = v.type\n    });\n    setSlotValues(blank.reverse())\n  },[currentSelected])\n\n\n  const [slotValues, setSlotValues] = useState<string[]>(Array(12).fill(null).map(() => \"\"))\n  const realIndexToSlot = (realIndex: number): number => {\n    const factor = (realIndex % 3 === 0) ? -2 : (realIndex % 3 === 1) ? 0 : 2\n    return (12 - realIndex) + factor\n  }\n  const slotToRealIndex = (slot: number): number => {\n    const factor = (slot % 3 === 0) ? -2 : (slot % 3 === 1) ? 2 : 0\n    return (slot) + factor -1\n  }\n\n\n  const handleChange = (indexOfValue: number, newValue: string) => {\n    setSlotValues(prev => {\n      prev[indexOfValue] = newValue\n      const filtered = prev.map((type, realIndex) => ({\n        type,\n        slot: realIndexToSlot(realIndex)\n      })).filter(({type}) => type !== \"\")\n        .map(({type, slot}): onUpdateSelectedOptions => ({\n          type: type as LabwareType,\n          slot\n        }))\n\n      onUpdateSelected(filtered)\n\n      return [...prev]\n    })\n  }\n  return (\n    <Container className={\"\"}>\n      <Box my={4}>\n        <Grid container spacing={3}>\n          {\n            slotValues.map((value, realIndex) => {\n              const index = realIndexToSlot(realIndex)\n              return <Grid key={index} item xs={4}>\n                <Paper className={classes.paper}>\n                  {(index === 12) ?\n                    <Typography variant={\"h4\"}>Trash</Typography>\n                    : <FormControl className={classes.formControl}>\n                      <InputLabel id={\"select-label-slot-\" + index}>Slot {index}</InputLabel>\n                      <Select\n                        displayEmpty\n                        labelId={\"select-label-slot-\" + index}\n                        value={value}\n                        onChange={(event) => {\n                          handleChange(realIndex, event.target.value as string)\n                        }}\n                        renderValue={(value): string => value as string} // make sure None option is not rendered\n\n                      >\n                        {(labware as string[]).map((ware) =>\n                          <MenuItem key={ware} value={ware}>{ware}</MenuItem>)\n                        }\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n\n                      </Select>\n                    </FormControl>}\n                </Paper>\n              </Grid>\n            })\n          }\n        </Grid>\n      </Box>\n    </Container>\n  )\n}\n\n","import React, {FC, Fragment} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Step,\n  Labware,\n  Well,\n  StepType,\n  stepTypeHas,\n  Transfer,\n  Laser,\n  Aspirate,\n  Dispense,\n  Mix, Plate, Wait, ChangeSpeed\n} from \"../../datatypes\";\nimport {FormControl, InputLabel, MenuItem, Select, TextField, Checkbox, FormControlLabel, Grid } from \"@material-ui/core\";\nimport {DialogActions, DialogContent, DialogTitle} from \"./shared/DialogStyledComponents\";\nimport {WellSelect} from \"./shared/WellSelect\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useSelectStepStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 120,\n  },\n}))\n\ninterface SelectStepProps {\n  currentStepType: StepType | undefined,\n  setCurrentStepType: (type: StepType) => void,\n}\n\nconst SelectStep: FC<SelectStepProps> = ({currentStepType, setCurrentStepType}) => {\n  const classes = useSelectStepStyles();\n  const options = [StepType.TRANSFER, StepType.LASER, StepType.ASPIRATE, StepType.DISPENSE, StepType.MIX, StepType.PLATE, StepType.WAIT, StepType.CHANGESPEED]\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id={\"select-step-label\"}>Select Step Type</InputLabel>\n      <Select\n        // displayEmpty\n        labelId={\"select-step-label\"}\n        value={currentStepType ?? \"\"}\n        onChange={e => {\n          setCurrentStepType(e.target.value as StepType)\n        }}\n      >\n        {options.map((value, pIndex,) =>\n          <MenuItem value={value} key={value}>{value}</MenuItem>,\n        )}\n      </Select>\n    </FormControl>\n  )\n\n}\n\n\ninterface StepNewDialogProps {\n  availableLabware: Labware[],\n  handleClose: () => void\n  handleSave: (step: Step) => void\n  open: boolean\n}\n\nexport const StepNewDialog: FC<StepNewDialogProps> = ({handleClose, handleSave, open, availableLabware}) => {\n\n\n  const [from, setFrom]                       = React.useState<Well | undefined>()\n  const [to, setTo]                           = React.useState<Well | undefined>()\n  const [duration, setDuration]               = React.useState<number>(0)\n  const [location, setLocation]               = React.useState<Well | undefined>()\n  const [volume, setVolume]                   = React.useState<number>(0)\n  const [touchtip, setTouchTip]               = React.useState<boolean>(true)\n  const [airgap, setAirgap]                   = React.useState<number>(0)\n  const [blowout, setBlowout]                 = React.useState<boolean>(false)\n  const [blowoutLocation, setBlowoutLocation] = React.useState<string>(\"trash\")\n  const [times, setTimes]                     = React.useState<number>(0)\n  const [heightOfAgar, setHeightOfAgar]       = React.useState<number>(0)\n  const [sterility, setSterility]             = React.useState<string>(\"once\")\n  const [currentStepType, setCurrentStepType] = React.useState<StepType | undefined>()\n  const [pipetteSpeeds, setPipetteSpeeds]     = React.useState<number[]>([92.86, 92.86, 92.86])\n\n  return (\n    <Dialog maxWidth={\"md\"} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        New Step\n      </DialogTitle>\n      <DialogContent dividers>\n        <SelectStep setCurrentStepType={(s: StepType) => {\n          setCurrentStepType(s)\n        }} currentStepType={currentStepType}/>\n        {\n          currentStepType && (\n            <Fragment>\n              <WellSelect availableLabware={availableLabware}\n                          setWell={(w) => {\n                            setFrom(w)\n                          }}\n                          well={from}\n                          hide={!stepTypeHas(currentStepType, \"from\")}\n                          name={\"From\"}/>\n              <WellSelect availableLabware={availableLabware}\n                          setWell={(w) => {\n                            setTo(w)\n                          }}\n                          well={to}\n                          hide={!stepTypeHas(currentStepType, \"to\")} name={\"Into\"}/>\n              <WellSelect name={\"Location\"}\n                          availableLabware={availableLabware}\n                          setWell={(w) => {\n                            setLocation(w)\n                          }}\n                          well={location}\n                          hide={!stepTypeHas(currentStepType, \"location\")}\n              />\n              {stepTypeHas(currentStepType, \"volume\") && <TextField required type=\"number\" onChange={(e) => {\n                e.persist();\n                setVolume(Number(e.target.value))\n              }} id=\"outlined-basic\" label=\"Volume [µL]\" variant=\"outlined\" value={(volume === 0) ? \"\" : volume}/>}\n              \n              {stepTypeHas(currentStepType, \"touchtip\") && (<FormControlLabel control={<Checkbox onChange={(e) => {\n                e.persist();\n                setTouchTip(Boolean(e.target.checked))\n              }} checked={touchtip}/>} label=\"Touch Tip\"/>)}\n              \n              {stepTypeHas(currentStepType, \"airgap\") && <TextField type=\"number\" onChange={(e) => {\n                e.persist();\n                setAirgap(Number(e.target.value))\n              }} id=\"outlined-basic\" label=\"Airgap after Aspirate\" variant=\"outlined\" value={(airgap === 0) ? \"\" : airgap}/>}\n\n              <Grid container spacing={2}>\n                <Grid item xs>\n                  {stepTypeHas(currentStepType, \"blowout\") && (<FormControlLabel control={<Checkbox onChange={(e) => {\n                    e.persist();\n                    setBlowout(Boolean(e.target.checked))\n                  }} checked={blowout}/>} label=\"Blowout after Dispense\"/>)}\n                </Grid>\n                <Grid item md hidden={!blowout}>\n                  {(stepTypeHas(currentStepType, \"blowoutLocation\") && blowout === true) && <FormControl>\n                    <InputLabel id={\"blowout-location-label\"}>Blowout Location</InputLabel>\n                    <Select labelId={\"blowout-location-label\"} onChange={(e) => {\n                      e.persist();\n                      setBlowoutLocation(e.target.value as string)\n                    }} id=\"select-blowoutlocation\" value={blowoutLocation} >\n                      <MenuItem value=\"destination well\">Destination Well</MenuItem>\n                      <MenuItem value=\"source well\">Source Well</MenuItem>\n                      <MenuItem value=\"trash\">Trash</MenuItem>\n                    </Select>\n                  </FormControl>}\n                </Grid>\n              </Grid>\n\n              {stepTypeHas(currentStepType, \"times\") && <TextField required type=\"number\" onChange={(e) => {\n                e.persist();\n                setTimes(Number(e.target.value))\n              }} id=\"outlined-basic\" label=\"Times to mix\" variant=\"outlined\" value={(times === 0) ? \"\" : times}/>}\n\n              {stepTypeHas(currentStepType, \"heightOfAgar\") && <TextField required type=\"number\" onChange={(e) => {\n                e.persist();\n                setHeightOfAgar(Number(e.target.value))\n              }} id=\"outlined-basic\" label=\"Height of Agar [mm]\" variant=\"outlined\"\n                                                                          value={(heightOfAgar === 0) ? \"\" : heightOfAgar}/>}\n\n              {stepTypeHas(currentStepType, \"duration\") && <TextField required type=\"number\" onChange={(e) => {\n                e.persist();\n                setDuration(Number(e.target.value))\n              }} id=\"outlined-basic\" label=\"Duration [sec]\" variant=\"outlined\"\n                                                                      value={(duration === 0) ? \"\" : duration}/>}\n              {stepTypeHas(currentStepType, \"sterility\") && <FormControl>\n                <InputLabel id={\"sterility-label\"}>Change Tip</InputLabel>\n                <Select labelId={\"sterility-label\"} onChange={(e) => {\n                  e.persist();\n                  setSterility(e.target.value as string)\n                }} id=\"select=sterility\" value={sterility} >\n                  <MenuItem value=\"once\">Once at start of step</MenuItem>\n                  <MenuItem value=\"always\">Before every aspirate</MenuItem>\n                  <MenuItem value=\"never\">Never</MenuItem>\n                </Select>\n              </FormControl>}\n\n              {stepTypeHas(currentStepType, \"pipetteSpeeds\") && (<Grid container spacing={2}> \n                <Grid item xs={3}>\n                  <TextField\n                    onChange={(e) => {\n                      e.persist();\n                      setPipetteSpeeds([Number(e.target.value), pipetteSpeeds[1], pipetteSpeeds[2]])\n                    }}\n                    label=\"Aspirate Speed (µL/sec)\"\n                    variant=\"outlined\"\n                    value={pipetteSpeeds[0]}\n                  />\n                  <Button onClick={() => {\n                    setPipetteSpeeds([92.86, pipetteSpeeds[1], pipetteSpeeds[2]])\n                    }}\n                     color=\"primary\">\n                    Reset to Default\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    onChange={(e) => {\n                      e.persist();\n                      setPipetteSpeeds([pipetteSpeeds[0], Number(e.target.value), pipetteSpeeds[2]])\n                    }}\n                    label=\"Dispense Speed (µL/sec)\"\n                    variant=\"outlined\"\n                    value={pipetteSpeeds[1]}\n                  />\n                  <Button onClick={() => {\n                    setPipetteSpeeds([pipetteSpeeds[0], 92.86, pipetteSpeeds[2]])\n                    }}\n                     color=\"primary\">\n                    Reset to Default\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    onChange={(e) => {\n                      e.persist();\n                      setPipetteSpeeds([pipetteSpeeds[0], pipetteSpeeds[1], Number(e.target.value)])\n                    }}\n                    label=\"Blowout Speed (µL/sec)\"\n                    variant=\"outlined\"\n                    value={pipetteSpeeds[2]}\n                  />\n                  <Button onClick={() => {\n                    setPipetteSpeeds([pipetteSpeeds[0], pipetteSpeeds[1], 92.86])\n                    }}\n                     color=\"primary\">\n                    Reset to Default\n                  </Button>\n                </Grid>\n              </Grid>)}\n\n            </Fragment>)}\n\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button autoFocus onClick={() => {\n          let step: Step | undefined = undefined\n          if (currentStepType === undefined) return\n          switch (currentStepType) {\n            case StepType.TRANSFER:\n              if (from && to && volume) {\n                step = new Transfer({from, to, volume, touchtip, airgap, blowout, blowoutLocation, sterility})\n              }\n              break;\n            case StepType.LASER:\n              if (location && duration) {\n                step = new Laser({location, duration})\n              }\n              break;\n            case StepType.ASPIRATE:\n              if (from && volume) {\n                step = new Aspirate({from, volume, touchtip})\n              }\n              break;\n            case StepType.DISPENSE:\n              if (to && volume) {\n                step = new Dispense({to, volume, touchtip, blowout})\n              }\n              break;\n            case StepType.MIX:\n              if (from && volume && times) {\n                step = new Mix({from, volume, times})\n              }\n              break;\n            case StepType.PLATE:\n              if (from && volume && heightOfAgar && to) {\n                step = new Plate({from, to, volume, touchtip, airgap, heightOfAgar, blowout, blowoutLocation})\n              }\n              break;\n            case StepType.WAIT:\n              if (duration) {\n                step = new Wait({duration})\n              }\n              break;\n            case StepType.CHANGESPEED:\n              if (pipetteSpeeds) {\n                step = new ChangeSpeed({pipetteSpeeds})\n              }\n              break;\n            case StepType.PLACEHOLDER:\n              break;\n\n          }\n          step && handleSave(step);\n          step && handleClose()\n        }} color=\"primary\">\n          Save changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n\n\n\n\n","import {Button} from \"@material-ui/core\";\nimport React, {FC} from \"react\";\nimport FileSaver from \"file-saver\";\nimport {buildPythonProtocolForExport, BuildPythonProtocolOptions} from \"../pythonConversion\";\n\ninterface DownloadButtonProps {\n  fileOptions:BuildPythonProtocolOptions\n}\n\nexport const DownloadButton: FC<DownloadButtonProps> = ({fileOptions, children}) => {\n  const onDownload = () => {\n    const file = buildPythonProtocolForExport(fileOptions)\n    const blob = new Blob([file], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, fileOptions.name.replace(/\\s/g, \"_\")+\".py\");\n  }\n\n  return <Button onClick={() => {\n    onDownload()\n  }} variant={\"outlined\"} size={\"medium\"} color=\"inherit\">{children}</Button>\n}","import {\n  Aspirate,\n  ChangeSpeed,\n  Dispense,\n  TubeRack24Eppendorf15,\n  TubeRack15Falcon15,\n  instanceOfWellPlate,\n  Labware, LabwareType,\n  Laser, Mix, OpentronsTipRack, Plate, Reservoir12,\n  Step, StepType,\n  Transfer, Wait, WellPlate12, WellPlate24, WellPlate48, WellPlate6, WellPlate96, FalconPetriDish90mm\n} from \"./datatypes\";\n\nexport interface BuildPythonProtocolOptions {\n  name: string,\n  author: string,\n  description: string,\n  labware: Labware[],\n  steps: Step[]\n}\n\nexport function buildPythonProtocolForExport({name, author, description, labware, steps}: BuildPythonProtocolOptions) {\n  const labwareString = labware.map(val => val.getPythonInit()).join(\"\\n\").replace(/\\n/g, \"\\n    \")\n  const stepString = steps.map((val, index, array) => val.getPythonString(array.slice(0, index), array.slice(index+1)))\n    .map(v => {console.log(v); return v})\n    .join(\"\\n\\n\")\n    .replace(/\\n/g, \"\\n    \")\n  const tipRacksString = labware\n    .filter(val => !instanceOfWellPlate(val))\n    .map(val => val.name).join(\", \")\n  console.log({labwareString, stepString, tipRacksString})\n  let hasLaser = false;\n  if(steps.some(step => step.type === \"LASER\")) { hasLaser = true }\n  return `\nfrom opentrons import protocol_api\n${hasLaser ? 'from ondine_laser_control import laser' : ''}\n\n# meta;${name}:${author}:${description}\n\nmetadata = {\n    'protocolName': '${name}',\n    'author': '${author}',\n    'description': '${description}',\n    'apiLevel': '2.8'\n}\ndef run(protocol: protocol_api.ProtocolContext):\n    ${labwareString}\n\n    pipette = protocol.load_instrument('p300_single_gen2', 'right', tip_racks=[${tipRacksString}])\n\n    ${hasLaser ? 'laserController = laser.Controller(protocol=protocol)' : ''}\n\n    ${stepString}\n    #end\n`\n\n}\n\nexport function importPythonProtocol({pythonFile}: { pythonFile: string }): BuildPythonProtocolOptions {\n  const labware: Labware[] = []\n  const steps: Step[] = []\n  let meta: string[] = []\n  pythonFile.split(\"\\n\").map(s => s.trim()) // get every line of the input file\n    .filter(val => val[0] === \"#\")// get only the comments\n    .forEach((comment) => { // extract step and labware info from comments\n      comment = comment.replace(\"#\", \"\")\n      let [className] = comment.split(\";\")\n      className = className.trim()\n      switch (className) {\n        case StepType.TRANSFER:\n          steps.push(Transfer.fromImportComment(comment))\n          break;\n        case StepType.LASER:\n          steps.push(Laser.fromImportComment(comment))\n          break;\n        case StepType.ASPIRATE:\n          steps.push(Aspirate.fromImportComment(comment))\n          break;\n        case StepType.DISPENSE:\n          steps.push(Dispense.fromImportComment(comment))\n          break;\n        case StepType.MIX:\n          steps.push(Mix.fromImportComment(comment))\n          break;\n        case StepType.PLATE:\n          steps.push(Plate.fromImportComment(comment))\n          break;\n        case StepType.WAIT:\n          steps.push(Wait.fromImportComment(comment))\n          break;\n        case StepType.CHANGESPEED:\n          steps.push(ChangeSpeed.fromImportComment(comment))\n          break;\n        case LabwareType.OpentronsTipRack:\n          labware.push(OpentronsTipRack.fromImportComment(comment))\n          break;\n        case LabwareType.Reservoir12:\n          labware.push(Reservoir12.fromImportComment(comment))\n          break;\n        case LabwareType.WellPlate96:\n          labware.push(WellPlate96.fromImportComment(comment))\n          break;\n        case LabwareType.WellPlate6:\n          labware.push(WellPlate6.fromImportComment(comment))\n          break;\n        case LabwareType.WellPlate12:\n          labware.push(WellPlate12.fromImportComment(comment))\n          break;\n        case LabwareType.WellPlate24:\n          labware.push(WellPlate24.fromImportComment(comment))\n          break;\n        case LabwareType.WellPlate48:\n          labware.push(WellPlate48.fromImportComment(comment))\n          break;\n        case LabwareType.TubeRack15Falcon15:\n          labware.push(TubeRack15Falcon15.fromImportComment(comment))\n          break;\n        case LabwareType.TubeRack24Eppendorf15:\n          labware.push(TubeRack24Eppendorf15.fromImportComment(comment))\n          break;\n        case LabwareType.FalconPetriDish90mm:\n          labware.push(FalconPetriDish90mm.fromImportComment(comment))\n          break;\n        case \"meta\":\n          meta = comment.split(\";\")[1].split(\":\");\n          break;\n      }\n    })\n\n  const [name, author, description] = meta;\n  return {\n    name,\n    author,\n    description,\n    labware,\n    steps\n  }\n}","import {Button} from \"@material-ui/core\";\nimport React, {FC} from \"react\";\nimport {importPythonProtocol} from \"../pythonConversion\";\nimport {Labware, Step} from \"../datatypes\";\n\ninterface UploadButtonProps {\n  setLabware:(labware:Labware[])=> void\n  setSteps:(steps:Step[])=> void\n  setMeta:(meta:{name:string,author:string,description:string})=>void\n}\n\n\nclass BasicFile {\n  name: string\n  type: string\n  content: string\n\n  constructor({name, type, content}: { name: string, type: string, content: string }) {\n    this.name = name;\n    this.type = type;\n    this.content = content;\n  }\n}\n\nexport const UploadButton: FC<UploadButtonProps> = ({setSteps,setLabware,  children,setMeta}) => {\n  const parseFile = (file:BasicFile)=>{\n    let {name, description, author, steps, labware} = importPythonProtocol({pythonFile:file.content});\n    setSteps(steps)\n    setLabware(labware)\n    setMeta({name, description, author})\n  }\n\n  const onUpload = async (event:React.ChangeEvent<HTMLInputElement>) => {\n    //keep the event from becoming null\n    event.persist();\n\n    const inputElement = event.target;\n\n    const filesRaw: FileList = inputElement!.files as FileList;\n\n    /**\n     *\n     * @returns {BasicFile}\n     */\n    const readAFile = (file: undefined | File) => new Promise<BasicFile>((resolve, reject) => {\n      const reader = new FileReader();\n      // you have to set the callbacks before you call a read method\n      reader.onerror = () => reject(\"Error Uploading\");\n      reader.onload = () => {\n        resolve(new BasicFile({\n            name: file?.name as string,\n            type: file?.type as string,\n            content: reader.result as string,\n        }))\n      };\n      reader.readAsText(file as Blob)\n    });\n\n    const filesPromises = [];\n\n    for (let i = 0; i < filesRaw?.length; i++) {\n      filesPromises.push(readAFile(filesRaw?.[i]))\n    }\n    const files:BasicFile[] = await Promise.all(filesPromises)\n    parseFile(files[0]);\n    // reset inputs file list\n    inputElement.value = null as unknown as string\n  };\n  // pretty much ripped from\n  //https://stackoverflow.com/questions/40589302/how-to-enable-file-upload-on-reacts-material-ui-simple-input\n\n  return (\n    <React.Fragment>\n      <input\n        accept=\"text/x-python\"\n        style={{display: \"none\"}}\n        id=\"raised-button-file\"\n        type=\"file\"\n        onChange={onUpload}\n      />\n      < label\n        htmlFor=\"raised-button-file\">\n        <Button variant={\"outlined\"} size={\"medium\"} color=\"inherit\" component=\"span\">\n          {children}\n        </Button>\n      </label>\n    </React.Fragment>\n  )\n}\n","import React, {useState} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {\n  copyStep,\n  TubeRack24Eppendorf15,\n  TubeRack15Falcon15,\n  Labware,\n  LabwareType,\n  OpentronsTipRack,\n  PlaceHolderStep, Reservoir12,\n  Step,\n  StepType, WellPlate12, WellPlate24, WellPlate48, WellPlate6,\n  WellPlate96,\n  FalconPetriDish90mm,\n} from \"./datatypes\";\nimport {StepList} from \"./components/StepList\";\nimport {AppBar, createStyles, Fab, TextField, Theme, Toolbar, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {StepEditDialog} from \"./components/dialogs/StepEditDialog\";\nimport {BasePlateSelect} from \"./components/BasePlateSelect\";\nimport {StepNewDialog} from \"./components/dialogs/StepNewDialog\";\nimport {DownloadButton} from \"./components/DownloadButton\";\nimport {BuildPythonProtocolOptions} from \"./pythonConversion\";\nimport {UploadButton} from \"./components/UploadButton\";\n\nexport interface onUpdateSelectedOptions {\n  type: LabwareType,\n  slot: number\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      flexGrow: 1,\n    },\n    center: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    metaContainer: {\n      marginTop: \"75px\",\n      display: \"grid\",\n      rowGap: \"16px\"\n    },\n    fab: {\n      marginBottom: \"16px\"\n    }\n  }),\n);\n\nconst swapArrayElements = (a: any[], x: number, y: number) => {\n  if (a.length === 1) return a;\n  a.splice(y, 1, a.splice(x, 1, a[y])[0]);\n  return a;\n};\nexport default function App() {\n  const classes = useStyles();\n  const [selectedStep, setSelectedStep] = React.useState<Step>(new PlaceHolderStep())\n  const [steps, setSteps] = React.useState<Step[]>([])\n  const [highlightedItemId, setHighlightedItemId] = useState<string>()\n  const moveUp = (id: string) => {\n    const index = steps.findIndex((val) => val.id === id)\n    if (index !== 0) {\n      setSteps(prev => {\n        return [...swapArrayElements(prev, index, index - 1)];\n      })\n    }\n  }\n  const moveDown = (id: string) => {\n    const index = steps.findIndex((val) => val.id === id)\n    if (index !== steps.length - 1) {\n      setSteps(prev => {\n        return [...swapArrayElements(prev, index, index + 1)]\n      })\n    }\n  }\n  const deleteItem = (id: string) => {\n    const index = steps.findIndex((val) => val.id === id)\n    setSteps(prev => {\n      prev.splice(index, 1)\n      return [...prev]\n    })\n  }\n  const saveItem = (step: Step) => {\n    const index = steps.findIndex((val) => val.id === step.id)\n    setHighlightedItemId(step.id)\n    setTimeout(() => {\n      setHighlightedItemId(undefined)\n    }, 2000)\n    setSteps(prev => {\n      prev[index] = step\n      return [...prev]\n    })\n  }\n  const addItem = (step: Step, withColor?: boolean, index?: number,) => {\n    if (withColor) {\n      setHighlightedItemId(step.id)\n      setTimeout(() => {\n        setHighlightedItemId(undefined)\n      }, 2000)\n    }\n    if (index === undefined || index >= steps.length) {\n      setSteps(prev => {\n        return [...prev, step]\n      })\n    } else {\n      setSteps(prev => {\n        const a = [...prev]\n        a.splice(index, 0, step)\n        return a\n      })\n    }\n  }\n  const copyItem = (id: string) => {\n    const index = steps.findIndex((val) => val.id === id)\n    if (index !== -1) {\n      const item = steps[index]\n      const step = copyStep(item)\n      addItem(step, true, index + 1)\n    }\n  }\n  const [newDialogIsOpen, setNewDialogIsOpen] = React.useState<boolean>(false)\n\n  const [name, setName]                       = React.useState<string>(\"\")\n  const [description, setDescription]         = React.useState<string>(\"\")\n  const [author, setAuthor]                   = React.useState<string>(\"\")\n\n\n  const labwareTypes = [\n    LabwareType.OpentronsTipRack,\n    LabwareType.Reservoir12,\n    LabwareType.WellPlate96,\n    LabwareType.WellPlate48,\n    LabwareType.WellPlate24,\n    LabwareType.WellPlate12,\n    LabwareType.WellPlate6,\n    LabwareType.TubeRack15Falcon15,\n    LabwareType.TubeRack24Eppendorf15,\n    LabwareType.FalconPetriDish90mm,\n  ]\n\n  const [selectedLabware, setSelectedLabware] = useState<Labware[]>([] as Labware[])\n  const onUpdateSelectedLabware = (selected: onUpdateSelectedOptions[]) => {\n    const labwareArray =\n      selected.map(({slot, type}) => {\n        switch (type) {\n          case LabwareType.WellPlate6:\n            return new WellPlate6(slot)\n          case LabwareType.WellPlate12:\n            return new WellPlate12(slot)\n          case LabwareType.WellPlate24:\n            return new WellPlate24(slot)\n          case LabwareType.WellPlate48:\n            return new WellPlate48(slot)\n          case LabwareType.WellPlate96:\n            return new WellPlate96(slot)\n          case LabwareType.Reservoir12:\n            return new Reservoir12(slot)\n          case LabwareType.OpentronsTipRack:\n            return new OpentronsTipRack(slot)\n          case LabwareType.TubeRack15Falcon15:\n            return new TubeRack15Falcon15(slot)\n          case LabwareType.TubeRack24Eppendorf15:\n            return new TubeRack24Eppendorf15(slot)\n          case LabwareType.FalconPetriDish90mm:\n            return new FalconPetriDish90mm(slot)\n          default:\n            console.error(selected)\n            throw new Error(\"Invalid Labware Type\")\n        }\n\n      })\n    setSelectedLabware(labwareArray)\n  }\n  const fileOptions: BuildPythonProtocolOptions = {\n    name,\n    author,\n    description,\n    labware: selectedLabware,\n    steps: steps\n  }\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Laser Protocol Designer\n          </Typography>\n          <UploadButton setLabware={labware => {\n            setSelectedLabware(labware)\n          }} setSteps={steps => {\n            setSteps([])\n            steps.map(v => addItem(v))\n          }} setMeta={({name, author, description}: { name: string, author: string, description: string }) => {\n            setName(name)\n            setAuthor(author)\n            setDescription(description)\n          }}>Upload Protocol</UploadButton>\n          <DownloadButton fileOptions={fileOptions}>Save as Protocol</DownloadButton>\n\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\" className={classes.metaContainer}>\n\n        <TextField\n          onChange={(e) => {\n            setName(e.target.value)\n          }}\n          label=\"Protocol Name\"\n          variant=\"outlined\"\n          value={name}\n        />\n        <TextField\n          onChange={(e) => {\n            setAuthor(e.target.value)\n          }}\n          label=\"Author\"\n          variant=\"outlined\"\n          value={author}\n        />\n        <TextField\n          onChange={(e) => {\n            setDescription(e.target.value)\n          }}\n          multiline\n          rowsMax={4}\n          label=\"Description\"\n          variant=\"outlined\"\n          value={description}\n        />\n\n      </Container>\n      <BasePlateSelect labware={labwareTypes} currentSelected={selectedLabware}\n                       onUpdateSelected={onUpdateSelectedLabware}/>\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <StepList\n            onCopy={copyItem}\n            onClickItem={step => {\n              setSelectedStep(step)\n            }}\n            onDelete={deleteItem}\n            onMoveUp={moveUp}\n            onMoveDown={moveDown}\n            steps={steps}\n            highlightItemId={highlightedItemId}/>\n        </Box>\n        <div className={classes.center}>\n          <Fab className={classes.fab} onClick={() => {\n            setNewDialogIsOpen(true)\n          }} color={\"primary\"} variant={\"extended\"}>Add Step</Fab>\n        </div>\n      </Container>\n      <StepNewDialog\n        handleClose={() => {\n          setNewDialogIsOpen(false)\n        }}\n        handleSave={(s) => addItem(s, true)}\n        open={newDialogIsOpen}\n        availableLabware={selectedLabware}/>\n      <StepEditDialog\n        availableLabware={selectedLabware}\n        initialStep={selectedStep} handleClose={() => {\n        setSelectedStep(new PlaceHolderStep())\n      }} handleSave={step => {\n        saveItem(step)\n      }} open={selectedStep.type !== StepType.PLACEHOLDER}/>\n    </React.Fragment>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nconst TITLE = 'Laser Protocol Designer'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Helmet>\n      <title>{ TITLE }</title>\n    </Helmet>\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}